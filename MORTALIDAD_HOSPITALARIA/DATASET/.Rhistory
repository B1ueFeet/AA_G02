library(foreign)
#----------------------------------PREPARACION---------------------------
rm(list = ls())
library(foreign)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET"))
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
provincia <- 'Guayas'
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
library(Boruta)
library(mlbench)
library(caret)
library(randomForest)
set.seed(111)
library(Hmisc)
#-------------------ANALISIS DE DATOS--------------------------------
#analizar la varianza primeroluego distribucion y luego hacer la imputacion de datos analizar la varianza de nuevo
library(dplyr)
library(modeest)
library(moments)
summary(spss)
varianza -> var(spss$numeraci贸n)
varianza -> var(spss$numeraci贸n)
varianza -> var(spss$numeraci贸n)
varianzaa <- var(spss$numeraci贸n)
varianzaa
colSums(is.na(spss))
varianzaa <- var(spss$anio_insc)
varianzaa
varianzaa <- var(spss$anio_insc)
varianzaa
#------------------ IMPUTACION DE DATOS --------------------------------
spss$anio_insc <- impute(spss$anio_insc, mode)
colSums(is.na(spss))
varianzaa <- var(spss$dia_insc)
varianzaa
varianzaa <- var(spss$dia_insc, na.rm = false)
varianzaa <- var(spss$dia_insc, na.rm = FALSE)
varianzaa
colSums(is.na(spss))
varianzaa
var(spss$dia_insc, na.rm = FALSE)
sd(spss$dia_insc, na.rm = FALSE)
coef_var(x=spss$dia_insc, na.rm=T)
coef_var(x=spss$dia_insc, na.rm=F)
coef_var <- function(x, na.rm = FALSE) {
sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)
}
coef_var(x=spss$dia_insc, na.rm=F)
coef_var(x=spss$dia_insc, na.rm=T)
var(spss$dia_insc, na.rm = T)
sd(spss$dia_insc, na.rm = T)
colSums(is.na(spss))
mean
spss$dia_insc <- impute(spss$dia_insc, mean)
spss$dia_insc <- impute(spss$dia_insc, mode)
#----------------------------------PREPARACION---------------------------
rm(list = ls())
library(foreign)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET"))
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
provincia <- 'Guayas'
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
library(Boruta)
library(mlbench)
library(caret)
library(randomForest)
set.seed(111)
library(Hmisc)
#-------------------ANALISIS DE DATOS--------------------------------
#analizar la varianza primeroluego distribucion y luego hacer la imputacion de datos analizar la varianza de nuevo
library(dplyr)
library(modeest)
library(moments)
summary(spss)
coef_var <- function(x, na.rm = FALSE) {
sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)
}
coef_var(x=spss$dia_insc, na.rm=T)
colSums(is.na(spss))
spss$dia_insc <- impute(spss$dia_insc, mode)
set.seed(111)
library(Hmisc)
library(Boruta)
library(mlbench)
library(caret)
library(randomForest)
set.seed(111)
library(foreign)
#-------------------ANALISIS DE DATOS--------------------------------
#analizar la varianza primeroluego distribucion y luego hacer la imputacion de datos analizar la varianza de nuevo
library(dplyr)
library(modeest)
library(moments)
spss$dia_insc <- impute(spss$dia_insc, mode)
#------------------ IMPUTACION DE DATOS --------------------------------
spss$anio_insc <- impute(spss$anio_insc, mode)
spss$dia_insc <- impute(spss$dia_insc, mean)
library(foreign)
library(Boruta)
library(mlbench)
library(caret)
library(randomForest)
set.seed(111)
library(Hmisc)
#-------------------ANALISIS DE DATOS--------------------------------
#analizar la varianza primeroluego distribucion y luego hacer la imputacion de datos analizar la varianza de nuevo
library(dplyr)
library(modeest)
library(moments)
summary(spss)
#------------------------INSTALACION DE PAQUETES-------------------------
install.packages("Boruta")
install.packages("Boruta")
#----------------------------------PREPARACION---------------------------
rm(list = ls())
library(foreign)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET"))
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
provincia <- 'Guayas'
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
library(Boruta)
library(mlbench)
library(caret)
library(randomForest)
set.seed(111)
library(Hmisc)
#-------------------ANALISIS DE DATOS--------------------------------
#analizar la varianza primeroluego distribucion y luego hacer la imputacion de datos analizar la varianza de nuevo
library(dplyr)
library(modeest)
library(moments)
#------------------ IMPUTACION DE DATOS --------------------------------
spss$anio_insc <- impute(spss$anio_insc, mode)
coef_var <- function(x, na.rm = FALSE) {
sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)
}
coef_var(x=spss$dia_insc, na.rm=T)
#------------------ IMPUTACION DE DATOS --------------------------------
spss$anio_insc <- impute(spss$anio_insc, mode)
spss$dia_insc <- impute(spss$dia_insc, mean)
var(spss$dia_insc, na.rm = T)
sd(spss$dia_insc, na.rm = T)
spss$dia_insc <- impute(spss$dia_insc, mean)
var(spss$dia_insc, na.rm = T)
spss$dia_insc <- impute(spss$dia_insc, mode)
var(spss$dia_insc, na.rm = T)
colSums(is.na(spss))
coef_var(x=spss$dia_insc, na.rm=T)
sd(spss$dia_insc, na.rm = T)
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
colSums(is.na(spss))
revisar_varianza(x=spss$dia_insc, na.rm=T)
sd(x, na.rm=na.rm)
revisar_varianza <- function(x, na.rm = FALSE) {
sd(x, na.rm=na.rm)
sd(x, na.rm=na.rm)
}
revisar_varianza(x=spss$dia_insc, na.rm=T)
lista <- c(sd(x, na.rm=na.rm), sd(x, na.rm=na.rm))
revisar_varianza <- function(x, na.rm = FALSE) {
lista <- c(sd(x, na.rm=na.rm), sd(x, na.rm=na.rm))
}
revisar_varianza(x=spss$dia_insc, na.rm=T)
revisar_varianza <- function(x, na.rm = FALSE) {
lista <- c(sd(x, na.rm=na.rm), sd(x, na.rm=na.rm))
lista
}
revisar_varianza(x=spss$dia_insc, na.rm=T)
sd(spss$dia_insc, na.rm = T)
var(spss$dia_insc, na.rm = T)
revisar_varianza <- function(x, na.rm = FALSE) {
lista <- c(var(x, na.rm=na.rm), sd(x, na.rm=na.rm))
lista
}
revisar_varianza(x=spss$dia_insc, na.rm=T)
revisar_varianza <- function(x, na.rm = FALSE) {
lista <- c(coef_var(x=x, na.rm=na.rm),var(x, na.rm=na.rm), sd(x, na.rm=na.rm))
lista
}
revisar_varianza(x=spss$dia_insc, na.rm=T)
coef_var(x=spss$dia_insc, na.rm=T)
range(spss$dia_insc)
range(spss$dia_insc,na.rm = T)
revisar_varianza <- function(x, na.rm = FALSE) {
lista <- c(coef_var(x=x, na.rm=na.rm),var(x, na.rm=na.rm), sd(x, na.rm=na.rm),range(spss$dia_insc,na.rm = T))
#-------coeficiente de varianza----varianza --------desviacion estandar------rango
lista
}
revisar_varianza(x=spss$dia_insc, na.rm=T)
revisar_varianza <- function(x, na.rm = FALSE) {
lista <- c(coef_var(x=x, na.rm=na.rm),var(x, na.rm=na.rm), sd(x, na.rm=na.rm),range(x,na.rm = na.rm))
#-------coeficiente de varianza----varianza --------desviacion estandar------rango
lista
}
revisar_varianza(x=spss$dia_insc, na.rm=T)
medidas_variabilidad <- function(x, na.rm = FALSE) {
lista <- c(coef_var(x=x, na.rm=na.rm),var(x, na.rm=na.rm), sd(x, na.rm=na.rm),range(x,na.rm = na.rm))
#-------coeficiente de varianza----varianza --------desviacion estandar------rango
lista
}
medidas_variabilidad(x=spss$dia_insc, na.rm=T)
imputados <- spss
#------------------ IMPUTACION DE DATOS --------------------------------
spss$anio_insc <- impute(spss$anio_insc, mean)
spss$dia_insc <- impute(spss$dia_insc, mean)
spss$edad <- impute(spss$edad, mean)
spss$cod_edad <- impute(spss$cod_edad, mean)
#------------------ IMPUTACION DE DATOS --------------------------------
imputados$anio_insc <- impute(spss$anio_insc, mean)
colSums(is.na(imputados))
colSums(is.na(spss))
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
imputados <- spss
colSums(is.na(spss))
colSums(is.na(imputados))
#------------------------revision de medidas de variabilidad--------------
medidas_variabilidad(x=spss$dia_insc, na.rm=T)
medidas_variabilidad(x=imputados$dia_insc, na.rm=T)
imputados$dia_insc <- impute(spss$dia_insc, mean)
#------------------------revision de medidas de variabilidad--------------
medidas_variabilidad(x=spss$dia_insc, na.rm=T)
medidas_variabilidad(x=imputados$dia_insc, na.rm=T)
imputados$dia_insc <- impute(spss$dia_insc, moda)
imputados$dia_insc <- impute(spss$dia_insc, mode)
#------------------------revision de medidas de variabilidad--------------
medidas_variabilidad(x=spss$dia_insc, na.rm=T)
medidas_variabilidad(x=imputados$dia_insc, na.rm=T)
#------------------------revision de medidas de variabilidad--------------
medidas_variabilidad(x=spss$dia_insc, na.rm=T)
medidas_variabilidad(x=imputados$dia_insc, na.rm=T)
colSums(is.na(spss))
colSums(is.na(imputados))
imputados$dia_insc <- impute(spss$dia_insc, median)
#------------------------revision de medidas de variabilidad--------------
medidas_variabilidad(x=spss$dia_insc, na.rm=T)
medidas_variabilidad(x=imputados$dia_insc, na.rm=T)
imputados$dia_insc <- impute(spss$dia_insc, mean)
#------------------------revision de medidas de variabilidad--------------
medidas_variabilidad(x=spss$dia_insc, na.rm=T)
medidas_variabilidad(x=imputados$dia_insc, na.rm=T)
colSums(is.na(imputados))
colSums(is.na(spss))
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
medidas_variabilidad(x, na.rm=T)
medidas_variabilidad(x, na.rm=T)
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
medidas_variabilidad(x, na.rm=T)
medidas_variabilidad(y, na.rm=T)
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),medidas_variabilidad(y, na.rm=T))
writeLines(as.character(lista))
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),medidas_variabilidad(y, na.rm=T))
cat(paste(lista, collapse = "\n"))
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(writeLines(as.character(medidas_variabilidad(x, na.rm=T))),
writeLines(as.character(medidas_variabilidad(y, na.rm=T))))
lista
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(writeLines(as.character(medidas_variabilidad(x, na.rm=T))),
writeLines(as.character(medidas_variabilidad(y, na.rm=T))))
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(writeLines(as.character(medidas_variabilidad(x, na.rm=T))),
writeLines(as.character(medidas_variabilidad(y, na.rm=T))))
matriz <- matrix(lista, nrow = 2, ncol = 1)
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 2, ncol = 1)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 2, ncol = 1)
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
matriz
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 2, ncol = 1)
matriz
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 2, ncol = 2)
matriz
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 2, ncol = 4)
matriz
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
medidas_variabilidad(x=spss$anio_insc, na.rm=T)
medidas_variabilidad(x=imputados$anio_insc, na.rm=T)
medidas_variabilidad <- function(x, na.rm = FALSE) {
lista <- c(format(coef_var(x=x, na.rm=na.rm), scientific = F),
format(var(x, na.rm=na.rm), scientific = F),
format(sd(x, na.rm=na.rm), scientific = F),
format(range(x,na.rm = na.rm), scientific = F))
#-------coeficiente de varianza----varianza --------desviacion estandar------rango
lista
}
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 2, ncol = 4)
matriz
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
medidas_variabilidad(x=spss$anio_insc, na.rm=T)
medidas_variabilidad(x=imputados$anio_insc, na.rm=T)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 2, ncol = 6)
matriz
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 1, ncol = 6)
matriz
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 1, ncol = 5)
matriz
}
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 2, ncol = 5)
matriz
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 5, ncol = 2)
matriz
}
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
colSums(is.na(spss))
#------------------------revision de medidas de variabilidad--------------
#anio_insc
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion(spss$anio_insc, imputados$anio_insc, T, median)
verificacion(spss$anio_insc, imputados$anio_insc, T, mode)
#------------------------revision de medidas de variabilidad--------------
#anio_insc
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
colSums(is.na(spss))
# segun los valores ausentes se necesita hacer la imputacion de las columnas
#anio_insc   dia_insc edad   cod_edad  nac_fall  etnia
#est_civil   niv_inst sabe_leer   autopsia     lugar_ocur    lug_viol
colSums(is.na(imputados))
medidas_variabilidad <- function(x, na.rm = FALSE) {
lista <- c(format(coef_var(x, na.rm=na.rm), scientific = F),
format(var(x, na.rm=na.rm), scientific = F),
format(sd(x, na.rm=na.rm), scientific = F),
format(range(x,na.rm = na.rm), scientific = F))
#-------coeficiente de varianza----varianza --------desviacion estandar------rango
lista
}
verificacion <- function(x, y, na.rm = FALSE, dispersion = mean) {
y <- impute(x, dispersion)
lista <- c(medidas_variabilidad(x, na.rm=T),
medidas_variabilidad(y, na.rm=T))
matriz <- matrix(lista, nrow = 5, ncol = 2)
matriz
}
colSums(is.na(spss))
# segun los valores ausentes se necesita hacer la imputacion de las columnas
#anio_insc   dia_insc edad   cod_edad  nac_fall  etnia
#est_civil   niv_inst sabe_leer   autopsia     lugar_ocur    lug_viol
colSums(is.na(imputados))
#------------------------revision de medidas de variabilidad--------------
#anio_insc
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
#------------------------revision de medidas de variabilidad--------------
#anio_insc
verificacion(spss$anio_insc, imputados$anio_insc, T, mean)
verificacion(spss$anio_insc, imputados$anio_insc, T, median)
verificacion(spss$anio_insc, imputados$anio_insc, T, mode)

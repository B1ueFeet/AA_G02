options(encoding = "utf-8")
#****************************** SELECCION DE VARIABLES ****************************
#limpieza de datos
rm(list = ls())
install.packages("rstudioapi")
install.packages("rstudioapi")
library(foreign)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET"))
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
provincia <- 'Guayas'
#crear un directorio de salidas
salida <- "Salidas/poblacion.csv"
#Variable a consideracion
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall",
"sexo", "fecha_fall", "edad",
"etnia", "lugar_ocur", "mor_viol", "autopsia",
"causa")
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
View(spss)
names(spss) <- tolower(names(spss))
tabla_contingencia <- table(spss$cant_insc, spss$causa)
library(vcd)
coef_contingencia <- assocstats(tabla_contingencia)$k
install.packages("vcd")
library(vcd)
coef_contingencia <- assocstats(tabla_contingencia)$k
coef_contingencia <- assocstats(tabla_contingencia)$k
View(spss)
tabla_contingencia <- table(spss$anio_insc, spss$causa)
library(vcd)
coef_contingencia <- assocstats(tabla_contingencia)$k
library(vcd)
coef_contingencia <- assocstats(tabla_contingencia)$k
coef_contingencia <- assocstats(tabla_contingencia)
tabla_contingencia <- table(spss$anio_insc, spss$causa)
install.packages("vcd")
install.packages("vcd")
library(vcd)
coef_contingencia <- assocstats(tabla_contingencia)
#Variable a consideracion
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall","fecha_insc",
"sexo", "fecha_fall", "edad",
"etnia", "lugar_ocur","prov_fall","cant_fall","parr_fall","area_fall" ,
"mor_viol", "autopsia",
"causa")
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
#Filtrado - sbudataset
spss_poblacion <- spss[spss$prov_insc == provincia, variables]
write.csv2(spss_poblacion, salida, row.names = FALSE)
options(encoding = "utf-8")
#****************************** SELECCION DE VARIABLES ****************************
#limpieza de datos
rm(list = ls())
library(foreign)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET"))
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
provincia <- 'Guayas'
#crear un directorio de salidas
salida <- "Salidas/poblacion.csv"
#Variable a consideracion
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall","fecha_insc",
"sexo", "fecha_fall", "edad",
"etnia", "lugar_ocur","prov_fall","cant_fall","parr_fall","area_fall" ,
"mor_viol", "autopsia",
"causa")
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
#Filtrado - sbudataset
spss_poblacion <- spss[spss$prov_insc == provincia, variables]
#Filtrado - sbudataset
spss_poblacion <- spss[spss$prov_insc == provincia, variables]
write.csv2(spss_poblacion, salida, row.names = FALSE)
library(caTools)
library(foreing)
library(miscFuns)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET/Salidas"))
#****************************** MANEJO DE VALORES AUSENTES ****************************
install.packages("caTools")
install.packages("caTools")
install.packages("foreing")
install.packages("miscFuncs")
library(caTools)
library(foreing)
library(miscFuns)
install.packages("foreing")
install.packages("foreing")
install.packages("foreing")
install.packages("foreign")
install.packages("foreing")
install.packages("miscFuncs")
library(caTools)
library(foreing)
library(foreing)
library(miscFuns)
install.packages("foreing")
install.packages("miscFuncs")
library(caTools)
library(foreing)
library(miscFuns)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET/Salidas"))
csvFileName <- "poblacion.csv"
poblacion <- read.csv2(csvFileName, header = TRUE, sep = ";")
dataset <- poblacion[,variables]
#------------------------MANEJO VALORES AUSENTES-----------------------
#valores ausentes
colSums(is.na(dataset))
autopsia
#eliminar valores ausentes
dataset$mor_viol <- NULL
#eliminar valores ausentes
dataset$autopsia <- NULL
#------------------------MANEJO VALORES AUSENTES-----------------------
#valores ausentes
colSums(is.na(dataset))
row.has.na <- apply(dataset, 1, function(x){
any(is.na(x))
})
dataset <- dataset[!row.has.na,]
#eliminar valores ausentes
dataset$autopsia <- NULL
#------------------------MANEJO VALORES AUSENTES-----------------------
#valores ausentes
colSums(is.na(dataset))
write.csv2(dataset, file = "mortalidad-hospitalaria-gye.csv", row.names = FALSE)
rm(list=ls())
install.packages("dummy")
install.packages('kohonen')
install.packages("tictoc")
install.packages("ggplot2")
library(kohonen)
library(dummy)
library(tictoc)
library(ggplot2)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET/Salidas"))
dataset_total <- read.csv2(file="mortalidad-hospitalaria-gye.csv")
datset_original <- dataset_total
colSums(is.na(dataset_total))
dataset_total$prov_insc<-factor(dataset_total$prov_insc)
dataset_total$cant_insc<-factor(dataset_total$cant_insc)
dataset_total$parr_insc<-factor(dataset_total$parr_insc)
dataset_total$nac_fall<-factor(dataset_total$nac_fall)
dataset_total$sexo<-factor(dataset_total$sexo)
dataset_total$fecha_fall<-factor(dataset_total$fecha_fall)
dataset_total$edad<-factor(dataset_total$edad)
dataset_total$etnia<-factor(dataset_total$etnia)
dataset_total$lugar_ocur<-factor(dataset_total$lugar_ocur)
dataset_total$causa<-factor(dataset_total$causa)
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall","fecha_insc",
"sexo", "fecha_fall", "edad",
"etnia", "lugar_ocur","prov_fall","cant_fall","parr_fall","area_fall" ,
"mor_viol", "autopsia",
"causa")
dataset_total$nac_fall<-factor(dataset_total$parr_fall)
dataset_total$prov_insc<-factor(dataset_total$prov_insc)
dataset_total$cant_insc<-factor(dataset_total$cant_insc)
dataset_total$parr_insc<-factor(dataset_total$parr_insc)
dataset_total$nac_fall<-factor(dataset_total$nac_fall)
dataset_total$nac_fall<-factor(dataset_total$fecha_insc)
dataset_total$sexo<-factor(dataset_total$sexo)
dataset_total$fecha_fall<-factor(dataset_total$fecha_fall)
dataset_total$edad<-factor(dataset_total$edad)
dataset_total$etnia<-factor(dataset_total$etnia)
dataset_total$lugar_ocur<-factor(dataset_total$lugar_ocur)
dataset_total$nac_fall<-factor(dataset_total$prov_fall)
dataset_total$nac_fall<-factor(dataset_total$cant_fall)
dataset_total$nac_fall<-factor(dataset_total$parr_fall)
dataset_total$nac_fall<-factor(dataset_total$area_fall)
dataset_total$causa<-factor(dataset_total$causa)
variables <- c(2:10)
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall","fecha_insc",
"sexo", "fecha_fall", "edad", "etnia", "lugar_ocur",
"prov_fall","cant_fall","parr_fall","area_fall" ,
"mor_viol", "autopsia", "causa")
variables <- c(2:15)
dataset<- dataset_total[,variables] # carga del data set solo con las variables
dataset <- dummy(dataset)
dataset.sc<- data.matrix(dataset)
set.seed(0)
View(dataset)
options(encoding = "utf-8")
#****************************** SELECCION DE VARIABLES ****************************
#limpieza de datos
rm(list = ls())
install.packages("rstudioapi")
library(foreign)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET"))
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
provincia <- 'Guayas'
#crear un directorio de salidas
salida <- "Salidas/poblacion.csv"
#Variable a consideracion
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall",
"sexo", "fecha_fall", "edad",
"etnia", "lugar_ocur","prov_fall","cant_fall","parr_fall","area_fall" ,
"mor_viol", "autopsia",
"causa")
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
#Filtrado - sbudataset
spss_poblacion <- spss[spss$prov_insc == provincia, variables]
write.csv2(spss_poblacion, salida, row.names = FALSE)
#------------------------------ANALISIS DE CORRELACCION-----------------------------------
tabla_contingencia <- table(spss$anio_insc, spss$causa)
install.packages("vcd")
library(vcd)
coef_contingencia <- assocstats(tabla_contingencia)
#****************************** MANEJO DE VALORES AUSENTES ****************************
install.packages("caTools")
install.packages("foreing")
install.packages("miscFuncs")
library(caTools)
library(foreing)
install.packages("foreing")
install.packages("miscFuncs")
library(caTools)
library(foreing)
library(miscFuns)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET/Salidas"))
csvFileName <- "poblacion.csv"
poblacion <- read.csv2(csvFileName, header = TRUE, sep = ";")
dataset <- poblacion[,variables]
#------------------------MANEJO VALORES AUSENTES-----------------------
#valores ausentes
colSums(is.na(dataset))
#eliminar valores ausentes
dataset$autopsia <- NULL
row.has.na <- apply(dataset, 1, function(x){
any(is.na(x))
})
dataset <- dataset[!row.has.na,]
write.csv2(dataset, file = "mortalidad-hospitalaria-gye.csv", row.names = FALSE)
rm(list=ls())
library(kohonen)
library(dummy)
library(tictoc)
library(ggplot2)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET/Salidas"))
dataset_total <- read.csv2(file="mortalidad-hospitalaria-gye.csv")
datset_original <- dataset_total
colSums(is.na(dataset_total))
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall","fecha_insc",
"sexo", "fecha_fall", "edad", "etnia", "lugar_ocur",
"prov_fall","cant_fall","parr_fall","area_fall" ,
"mor_viol", "autopsia", "causa")
dataset_total$prov_insc<-factor(dataset_total$prov_insc)
dataset_total$cant_insc<-factor(dataset_total$cant_insc)
dataset_total$parr_insc<-factor(dataset_total$parr_insc)
dataset_total$nac_fall<-factor(dataset_total$nac_fall)
dataset_total$sexo<-factor(dataset_total$sexo)
dataset_total$fecha_fall<-factor(dataset_total$fecha_fall)
dataset_total$edad<-factor(dataset_total$edad)
dataset_total$etnia<-factor(dataset_total$etnia)
dataset_total$lugar_ocur<-factor(dataset_total$lugar_ocur)
dataset_total$nac_fall<-factor(dataset_total$prov_fall)
dataset_total$nac_fall<-factor(dataset_total$cant_fall)
dataset_total$nac_fall<-factor(dataset_total$parr_fall)
dataset_total$nac_fall<-factor(dataset_total$area_fall)
dataset_total$causa<-factor(dataset_total$causa)
#****************************** SELECCION DE VARIABLES ****************************
#limpieza de datos
rm(list = ls())
install.packages("rstudioapi")
install.packages("rstudioapi")
library(foreign)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET"))
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
provincia <- 'Guayas'
#crear un directorio de salidas
salida <- "Salidas/poblacion.csv"
#Variable a consideracion
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall",
"sexo", "fecha_fall", "edad",
"etnia", "lugar_ocur","prov_fall","cant_fall","parr_fall","area_fall" ,
"mor_viol", "autopsia",
"causa")
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
#Filtrado - sbudataset
spss_poblacion <- spss[spss$prov_insc == provincia, variables]
write.csv2(spss_poblacion, salida, row.names = FALSE)
library(caTools)
library(foreing)
library(miscFuns)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET/Salidas"))
csvFileName <- "poblacion.csv"
poblacion <- read.csv2(csvFileName, header = TRUE, sep = ";")
dataset <- poblacion[,variables]
#------------------------MANEJO VALORES AUSENTES-----------------------
#valores ausentes
colSums(is.na(dataset))
#eliminar valores ausentes
dataset$autopsia <- NULL
dataset$mor_viol <- NULL
row.has.na <- apply(dataset, 1, function(x){
any(is.na(x))
})
dataset <- dataset[!row.has.na,]
#------------------------MANEJO VALORES AUSENTES-----------------------
#valores ausentes
colSums(is.na(dataset))
write.csv2(dataset, file = "mortalidad-hospitalaria-gye.csv", row.names = FALSE)
rm(list=ls())
install.packages("dummy")
install.packages("dummy")
library(kohonen)
library(dummy)
library(tictoc)
library(ggplot2)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET/Salidas"))
dataset_total <- read.csv2(file="mortalidad-hospitalaria-gye.csv")
datset_original <- dataset_total
colSums(is.na(dataset_total))
variables <- c("prov_insc","cant_insc","parr_insc","nac_fall",
"sexo", "fecha_fall", "edad", "etnia", "lugar_ocur",
"prov_fall","cant_fall","parr_fall","area_fall" ,
"mor_viol", "autopsia", "causa")
dataset_total$prov_insc<-factor(dataset_total$prov_insc)
dataset_total$cant_insc<-factor(dataset_total$cant_insc)
dataset_total$parr_insc<-factor(dataset_total$parr_insc)
dataset_total$nac_fall<-factor(dataset_total$nac_fall)
dataset_total$sexo<-factor(dataset_total$sexo)
dataset_total$fecha_fall<-factor(dataset_total$fecha_fall)
dataset_total$edad<-factor(dataset_total$edad)
dataset_total$etnia<-factor(dataset_total$etnia)
dataset_total$lugar_ocur<-factor(dataset_total$lugar_ocur)
dataset_total$nac_fall<-factor(dataset_total$prov_fall)
dataset_total$nac_fall<-factor(dataset_total$cant_fall)
dataset_total$nac_fall<-factor(dataset_total$parr_fall)
dataset_total$nac_fall<-factor(dataset_total$area_fall)
variables <- c(2:14)
dataset<- dataset_total[,variables] # carga del data set solo con las variables
dataset <- dummy(dataset)
dataset.sc<- data.matrix(dataset)
set.seed(0)
som_grid <- somgrid(xdim=5,ydim = 5, topo= "rectangular")
tic("Time to run SOM: ") # Inicia el tiempo
som_model <- som(X=dataset.sc, grid=som_grid, rlen = 100, alpha = c(0.05, 0.01), keep.data=TRUE)
rm(list = ls())
library(foreign)
editor <- rstudioapi::getSourceEditorContext()
ruta_dir <- dirname(editor$path)
print(ruta_dir)
#Cargas de datos al directorio
setwd(file.path(ruta_dir,"/DATASET"))
#Crear una variable
spssPoblacion <- "inec_defuncionesgenerales_2020.csv"
provincia <- 'Guayas'
spss <- read.csv2(spssPoblacion, header = TRUE, sep = ";")
names(spss) <- tolower(names(spss))
#install.packages("randomForest")
library(randomForest)
install.packages("randomForest")
library(randomForest)
mtry
modelo1 <- randomForest(class~.,data=spss,
ntree=500,importance=TRUE,maxnodes=10,mtry=45)
dataset.sc<- data.matrix(spss)
modelo1 <- randomForest(class~.,data=spss,
ntree=500,importance=TRUE,maxnodes=10,mtry=45)
modelo1 <- randomForest(class~.,data=dataset.sc,
ntree=500,importance=TRUE,maxnodes=10,mtry=45)
modelo1 <- randomForest(class~.,data=dataset.sc,
ntree=500,importance=TRUE,maxnodes=10,mtry=45)
#Creamos un objeto con las "importancias" de las variables
importancia=data.frame(importance(modelo1))
modelo1 <- randomForest(class~.,data=dataset.sc,
ntree=500,importance=TRUE,maxnodes=10,mtry=25)
View(editor)
library(randomForest)
dataset.sc<- data.matrix(spss)
modelo1 <- randomForest(class~.,data=dataset.sc,
ntree=500,importance=TRUE,maxnodes=45,mtry=25)
modelo1 <- randomForest(class~.,as.matrix(spss),
ntree=500,importance=TRUE,maxnodes=45,mtry=25)
modelo1 <- randomForest(class~.,as.matrix(spss),ntree=500,importance=TRUE,maxnodes=10,mtry=25)
